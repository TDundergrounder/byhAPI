<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta http-equiv="x-ua-compatible" content="IE=edge"/>
<title>Test results - Class com.beyondh.cases.order.OrderCases</title>
<link href="../css/base-style.css" rel="stylesheet" type="text/css"/>
<link href="../css/style.css" rel="stylesheet" type="text/css"/>
<script src="../js/report.js" type="text/javascript"></script>
</head>
<body>
<div id="content">
<h1>Class com.beyondh.cases.order.OrderCases</h1>
<div class="breadcrumbs">
<a href="../index.html">all</a> &gt; 
<a href="../packages/com.beyondh.cases.order.html">com.beyondh.cases.order</a> &gt; OrderCases</div>
<div id="summary">
<table>
<tr>
<td>
<div class="summaryGroup">
<table>
<tr>
<td>
<div class="infoBox" id="tests">
<div class="counter">5</div>
<p>tests</p>
</div>
</td>
<td>
<div class="infoBox" id="failures">
<div class="counter">1</div>
<p>failures</p>
</div>
</td>
<td>
<div class="infoBox" id="ignored">
<div class="counter">0</div>
<p>ignored</p>
</div>
</td>
<td>
<div class="infoBox" id="duration">
<div class="counter">5.176s</div>
<p>duration</p>
</div>
</td>
</tr>
</table>
</div>
</td>
<td>
<div class="infoBox failures" id="successRate">
<div class="percent">80%</div>
<p>successful</p>
</div>
</td>
</tr>
</table>
</div>
<div id="tabs">
<ul class="tabLinks">
<li>
<a href="#tab0">Failed tests</a>
</li>
<li>
<a href="#tab1">Tests</a>
</li>
</ul>
<div id="tab0" class="tab">
<h2>Failed tests</h2>
<div class="test">
<a name="addCheckInCase[0]({&quot;CheckinType&quot;:&quot;Normal&quot;,&quot;OrgId&quot;:660247752032257,&quot;EstimatedArriveTime&quot;:&quot;2017-11-10 14:22:54&quot;,&quot;EstimatedDepartureTime&quot;:&quot;2017-11-11 14:22:54&quot;,&quot;RoomPlans&quot;:[{&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;Count&quot;:1,&quot;Price&quot;:[{&quot;OrignPrice&quot;:248,&quot;ActualPrice&quot;:248,&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;RoomCount&quot;:1}]}],&quot;ContractId&quot;:0,&quot;Liaisons&quot;:[{&quot;Name&quot;:&quot;蘑夏踩牌&quot;,&quot;Mobile&quot;:&quot;13067305933&quot;}],&quot;Locked&quot;:false,&quot;ExpireKeepTime&quot;:&quot;2017-11-10 20:22:54&quot;,&quot;PrePaymentTypeId&quot;:&quot;Full&quot;,&quot;PromotionId&quot;:0,&quot;IsExtenalPrice&quot;:false}, com.beyondh.model.order.CheckinCustomer@600049cc)"></a>
<h3 class="failures">addCheckInCase[0]({&quot;CheckinType&quot;:&quot;Normal&quot;,&quot;OrgId&quot;:660247752032257,&quot;EstimatedArriveTime&quot;:&quot;2017-11-10 14:22:54&quot;,&quot;EstimatedDepartureTime&quot;:&quot;2017-11-11 14:22:54&quot;,&quot;RoomPlans&quot;:[{&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;Count&quot;:1,&quot;Price&quot;:[{&quot;OrignPrice&quot;:248,&quot;ActualPrice&quot;:248,&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;RoomCount&quot;:1}]}],&quot;ContractId&quot;:0,&quot;Liaisons&quot;:[{&quot;Name&quot;:&quot;蘑夏踩牌&quot;,&quot;Mobile&quot;:&quot;13067305933&quot;}],&quot;Locked&quot;:false,&quot;ExpireKeepTime&quot;:&quot;2017-11-10 20:22:54&quot;,&quot;PrePaymentTypeId&quot;:&quot;Full&quot;,&quot;PromotionId&quot;:0,&quot;IsExtenalPrice&quot;:false}, com.beyondh.model.order.CheckinCustomer@600049cc)</h3>
<span class="code">
<pre>java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.beyondh.cases.order.OrderCases.addCheckInCase(OrderCases.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:205)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:641)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:129)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:88)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:120)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:147)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:129)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
</pre>
</span>
</div>
</div>
<div id="tab1" class="tab">
<h2>Tests</h2>
<table>
<thead>
<tr>
<th>Test</th>
<th>Duration</th>
<th>Result</th>
</tr>
</thead>
<tr>
<td class="success">QueryOrderAvailablePromotionsCase[0]({&quot;CheckinType&quot;:&quot;Normal&quot;,&quot;OrgId&quot;:660247752032257,&quot;EstimatedArriveTime&quot;:&quot;2017-11-10 14:22:54&quot;,&quot;EstimatedDepartureTime&quot;:&quot;2017-11-14 14:22:54&quot;,&quot;RoomPlans&quot;:[{&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;Count&quot;:1,&quot;Price&quot;:[{&quot;OrignPrice&quot;:248,&quot;ActualPrice&quot;:248,&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;RoomCount&quot;:1}]}],&quot;ContractId&quot;:0,&quot;Liaisons&quot;:[{&quot;Name&quot;:&quot;仇斩明辜&quot;,&quot;Mobile&quot;:&quot;13011037733&quot;}],&quot;Locked&quot;:false,&quot;ExpireKeepTime&quot;:&quot;2017-11-10 20:22:54&quot;,&quot;PrePaymentTypeId&quot;:&quot;Full&quot;,&quot;PromotionId&quot;:0,&quot;IsExtenalPrice&quot;:false}, WebAPI豪园房型活动)</td>
<td>0.293s</td>
<td class="success">passed</td>
</tr>
<tr>
<td class="failures">addCheckInCase[0]({&quot;CheckinType&quot;:&quot;Normal&quot;,&quot;OrgId&quot;:660247752032257,&quot;EstimatedArriveTime&quot;:&quot;2017-11-10 14:22:54&quot;,&quot;EstimatedDepartureTime&quot;:&quot;2017-11-11 14:22:54&quot;,&quot;RoomPlans&quot;:[{&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;Count&quot;:1,&quot;Price&quot;:[{&quot;OrignPrice&quot;:248,&quot;ActualPrice&quot;:248,&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;RoomCount&quot;:1}]}],&quot;ContractId&quot;:0,&quot;Liaisons&quot;:[{&quot;Name&quot;:&quot;蘑夏踩牌&quot;,&quot;Mobile&quot;:&quot;13067305933&quot;}],&quot;Locked&quot;:false,&quot;ExpireKeepTime&quot;:&quot;2017-11-10 20:22:54&quot;,&quot;PrePaymentTypeId&quot;:&quot;Full&quot;,&quot;PromotionId&quot;:0,&quot;IsExtenalPrice&quot;:false}, com.beyondh.model.order.CheckinCustomer@600049cc)</td>
<td>3.202s</td>
<td class="failures">failed</td>
</tr>
<tr>
<td class="success">addOrderCase[0]({&quot;CheckinType&quot;:&quot;Normal&quot;,&quot;OrgId&quot;:660247752032257,&quot;EstimatedArriveTime&quot;:&quot;2017-11-10 14:22:57&quot;,&quot;EstimatedDepartureTime&quot;:&quot;2017-11-11 14:22:57&quot;,&quot;RoomPlans&quot;:[{&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;Count&quot;:1,&quot;Price&quot;:[{&quot;OrignPrice&quot;:248,&quot;ActualPrice&quot;:248,&quot;RoomTypeId&quot;:&quot;DR&quot;,&quot;RoomCount&quot;:1}]}],&quot;ContractId&quot;:0,&quot;Liaisons&quot;:[{&quot;Name&quot;:&quot;绒贞深捻&quot;,&quot;Mobile&quot;:&quot;13029310390&quot;}],&quot;Locked&quot;:false,&quot;ExpireKeepTime&quot;:&quot;2017-11-10 20:22:57&quot;,&quot;PrePaymentTypeId&quot;:&quot;Full&quot;,&quot;PromotionId&quot;:0,&quot;IsExtenalPrice&quot;:false})</td>
<td>1.560s</td>
<td class="success">passed</td>
</tr>
<tr>
<td class="success">openCheckinSmartDoorLockCase[0]({&quot;OrgId&quot;:660247752032257,&quot;CheckinId&quot;:660250554286081})</td>
<td>0.059s</td>
<td class="success">passed</td>
</tr>
<tr>
<td class="success">queryCheckinSmartDoorLocksCase[0]({&quot;OrgId&quot;:660247752032257,&quot;CheckinIds&quot;:[660250554286081],&quot;IncludeLockDetail&quot;:false})</td>
<td>0.062s</td>
<td class="success">passed</td>
</tr>
</table>
</div>
</div>
<div id="footer">
<p>
<div>
<label class="hidden" id="label-for-line-wrapping-toggle" for="line-wrapping-toggle">Wrap lines
<input id="line-wrapping-toggle" type="checkbox" autocomplete="off"/>
</label>
</div>Generated by 
<a href="http://www.gradle.org">Gradle 3.5-rc-2</a> at 2017-11-10 14:22:59</p>
</div>
</div>
</body>
</html>
