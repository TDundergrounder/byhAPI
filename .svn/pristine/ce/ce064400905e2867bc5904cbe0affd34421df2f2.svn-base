package com.beyondh.dataprovider;

import com.beyondh.constants.TestConstants;
import com.beyondh.enums.pms.CheckinType;
import com.beyondh.model.hotel.*;
import com.beyondh.model.order.CheckinInfo;
import com.beyondh.model.order.OrderAddModel;
import com.beyondh.utility.ClientGroup;
import com.beyondh.utility.Helper;
import org.testng.ITestContext;
import org.testng.annotations.DataProvider;

import java.math.BigDecimal;
import java.util.Calendar;

@ClientGroup(TestConstants.GRPOUP_HOTEL)
public class HotelDataProvider extends  AbstractTestDataProvider {

    public static final String DATA_GETROOMTYPES = "getRoomTypesCase";

    public static final String DATA_GETHOTELROOMTYPES = "GetHotelRoomTypesCase";

    public static final String DATA_GETHOTELS = "GetHotelsCase";

    public static final String DATA_ADDROOMREMARK= "AddRoomRemarkCase";

    public static final String DATA_SEARCHHOTELWITHROOMPRICEANDROOMCOUNTCASE= "SearchHotelWithRoomPriceAndRoomCountCase";

    public static final String DATA_GETAVAILABLEROOMS= "GetAvailableRoomsCase";

    public static final String DATA_GETMEMBERHOURRENTPRICE= "GetMemberHourRentPriceCase";

    public static final String DATA_UPDATEHOTELWECHATLOCATION= "UpdateHotelWechatLocationCase";

    public static  final String DATA_GETFLOORS = "GetFloors";

    public static  final String DATA_GETHOTELINFO= "GetHotelInfoCase";

    public static  final String DATA_GETOWNERCONFIGS= "GetOwnerConfigsCase";

    public static  final String DATA_GETORGCONFIGS= "GetOrgConfigsCase";

    public static  final String DATA_GETHTNETDOOROPENINFO= "GetHTNetDoorOpenInfoCase";

    public static  final String DATA_GETORGGOODS= "GetOrgGoodsCase";

    @DataProvider(name = DATA_GETROOMTYPES)
    public static Object[][] getRoomTypesCaseData() {
        return new Object[][]{
                { new RoomType(_commonData.get("RoomTypeTR"))}
        };
    }

    @DataProvider(name = DATA_GETHOTELROOMTYPES)
    public static Object[][] getHotelRoomTypesCaseData() {
        return new Object[][]{
                {Long.valueOf(getOrgId()), new RoomTypeInfo(_commonData.get("RoomTypeTR"))}};
    }

    @DataProvider(name = DATA_GETFLOORS)
    public static Object[][] getFloorsData() {
        return new Object[][]{{Long.valueOf(getOrgId())}};
    }

    @DataProvider(name = DATA_GETHOTELS)
    public static Object[][] getHotelsCaseData() {
        return new Object[][]{{new HotelQueryModel(getOrgName()), new HotelInfo(getOrgId(),getOrgName())},
                {new HotelQueryModel(true),new HotelInfo(getOrgId(),getOrgName())},
                {new HotelQueryModel(false),new HotelInfo(getOrgId(),getOrgName())},
        };
    }

    @DataProvider(name = DATA_ADDROOMREMARK)
    public static Object[][] addRoomRemarkCaseData(ITestContext context) {
        CheckinInfo check = getDefaultCheckIn(context);
        return new Object[][]{
                {new AddRoomRemarkModel(getOrgId(), check.getCheckinId(),_commonData.get("MemberId"),3, 5, 3, "generated by addRoomRemark case", 2,false)}
        };
    }

    @DataProvider(name = DATA_SEARCHHOTELWITHROOMPRICEANDROOMCOUNTCASE)
    public static Object[][] searchHotelWithRoomPriceAndRoomCountCaseData() {

        Calendar calendar = Calendar.getInstance();

        String arriveTime =Helper.getFormatDateTime(calendar);
        calendar.add(Calendar.DAY_OF_MONTH, +1);
        String departureTime = Helper.getFormatDate(calendar) + " 12:00:00";
        calendar.add(Calendar.DAY_OF_MONTH, +1);
        String departureTimeSecond = Helper.getFormatDate(calendar) + " 12:00:00";
        return new Object[][]{
                {new HotelSearchModel(arriveTime,departureTime,new long[]{getOrgId()})},
                {new HotelSearchModel(arriveTime,departureTime,new long[]{getOrgId()},new String[]{_commonData.get("RoomTypeTR")})},
                {new HotelSearchModel(arriveTime,departureTime,new long[]{getOrgId()},new String[]{_commonData.get("RoomTypeTR")},"Member")},
                {new HotelSearchModel(arriveTime,departureTime,new long[]{getOrgId()},new String[]{_commonData.get("RoomTypeTR")},"Contractor")},
                {new HotelSearchModel(arriveTime,departureTimeSecond,new long[]{getOrgId()},new String[]{_commonData.get("RoomTypeTR")},"Contractor")},
        };
    }

    @DataProvider(name = DATA_GETAVAILABLEROOMS)
    public static Object[][] getAvailableRoomsCaseData() {

        Calendar calendar = Calendar.getInstance();

        String arriveTime =Helper.getFormatDateTime(calendar);
        calendar.add(Calendar.DAY_OF_MONTH, +1);
        String departureTime = Helper.getFormatDate(calendar) + " 12:00:00";
        calendar.add(Calendar.DAY_OF_MONTH, +1);
        String departureTimeSecond = Helper.getFormatDate(calendar) + " 12:00:00";
        return new Object[][]{
                {new AvailableRoomQueryModel(getOrgId(),arriveTime,departureTime)},
                {new AvailableRoomQueryModel(getOrgId(),arriveTime,departureTime,new String[]{_commonData.get("RoomTypeTR")})},
                {new AvailableRoomQueryModel(getOrgId(),arriveTime,departureTime,new String[]{_commonData.get("RoomTypeTR")},new String[]{TestConstants.ROOM_STATUS_VC})},
                {new AvailableRoomQueryModel(getOrgId(),arriveTime,departureTime,new String[]{_commonData.get("RoomTypeTR")},new String[]{TestConstants.ROOM_STATUS_VC,TestConstants.ROOM_STATUS_OC})},
                {new AvailableRoomQueryModel(getOrgId(),arriveTime,departureTime,new String[]{_commonData.get("RoomTypeTR")},new String[]{TestConstants.ROOM_STATUS_VC,TestConstants.ROOM_STATUS_OC,TestConstants.ROOM_STATUS_OD})},
        };
    }

    @DataProvider(name = DATA_GETMEMBERHOURRENTPRICE)
    public static Object[][] getMemberHourRentPriceCaseData() {
        Calendar calendar = Calendar.getInstance();

        String arriveTime =Helper.getFormatDateTime(calendar);
        calendar.add(Calendar.HOUR_OF_DAY, 3);
        String departureTime = Helper.getFormatDateTime(calendar);

        return new Object[][]{
                {new HourRentMemberPriceQueryModel(getOrgId(),arriveTime,departureTime,new String[]{_commonData.get("Level")}),new BigDecimal(_commonData.get("Hour3Price"))}
        };
    }

    @DataProvider(name = DATA_UPDATEHOTELWECHATLOCATION)
    public static Object[][] updateHotelWechatLocationCaseData() {
        return new Object[][]{
                {new WechatLocationModel(getOrgId(),Helper.getRandomChinese(6))}
        };
    }

    @DataProvider(name = DATA_GETHOTELINFO)
    public static Object[][] getHotelInfoCaseData() {
        return new Object[][]{{Long.valueOf(getOrgId()),new HotelInfo(getOrgId(),_commonData.get("OrgName"),_commonData.get("OrgNO"))}};
    }

    @DataProvider(name = DATA_GETOWNERCONFIGS)
    public static Object[][] getOwnerConfigsCaseData() {
        return new Object[][]{
                {new OwnerConfigQueryModel(_commonData.get("BusinessLogicCategory"),_commonData.get("BusinessLogicAutoNoShowSwitchKey")),new OwnerConfigInfo(_commonData.get("BusinessLogicCategory"),_commonData.get("BusinessLogicAutoNoShowSwitchKey"),_commonData.get("BusinessLogicAutoNoShowSwitchValue"),_commonData.get("BusinessLogicAutoNoShowSwitchDescription"))}};
    }

    @DataProvider(name = DATA_GETORGCONFIGS)
    public static Object[][] getOrgConfigsCaseData() {
        return new Object[][]{
                {new OrgConfigQueryModel(getOrgId(),_commonData.get("PrintOrgCategory"),_commonData.get("PrintPrintDepositReceiptKey")),new OrgConfigInfo(getOrgId(),_commonData.get("PrintOrgCategory"),_commonData.get("PrintPrintDepositReceiptKey"),_commonData.get("PrintPrintDepositReceiptValue"),_commonData.get("PrintPrintDepositReceiptDescription"))}};
    }

    @DataProvider(name = DATA_GETHTNETDOOROPENINFO)
    public static Object[][] getHTNetDoorOpenInfoCaseData(ITestContext context) {

        CheckinInfo check = getDefaultCheckIn(context);
        return new Object[][]{
                {new HTNetDoorOpenQueryModel(getOrgId(),check.getCheckinId())}
        };
    }

    @DataProvider(name = DATA_GETORGGOODS)
    public static Object[][] getOrgGoodsCaseData()  {
        return new Object[][]{{Long.valueOf(getOrgId()),new HotelGoodsInfo(getOrgId(),_commonData.get("GoodId"),_commonData.get("GoodName"), new BigDecimal(_commonData.get("GoodPrice")))}
    };
    }
}
